@(
 Html.Kendo().Grid<ProductViewModel>().AddBaseOptions(Html).Name("grid")
)



<script>
    var collection;

    //get's the text by value
    function getTextByValue(data, indexOfColumnInData, columnNameInData) {
        grid = $("#grid").data("kendoGrid");
        //change the index of the column with your index
        valuesCollection = grid.options.columns[indexOfColumnInData].values;

        //if the collection is empty - get it from the grid
        if (!collection) {
            collection = {};
            //Set the correct FKColumn index
            for (var value in valuesCollection) {
                collection[valuesCollection[value].value] = valuesCollection[value].text;
            }
        }

        var valueOfProperty = ''; // това трябва да е Id-то
        for (var name in data) {
            //alert(name);
            //var value = obj[name];
            //alert(value);
            if (name === columnNameInData)
            {
                valueOfProperty = data[name];
            }
        }

        //var resultToReturn = collection[data.CategoryId];
        var resultToReturn = collection[valueOfProperty];
        if (resultToReturn === undefined) {
            resultToReturn = '';
        }

        return resultToReturn;
    }
</script>



<script type="text/javascript">

    $(document).ready(function () {

        var grid = $("#grid").data("kendoGrid");

        //bind click event to the checkbox
        grid.table.on("click", ".checkbox", selectRow);

        $("#showSelection").bind("click", function () {
            var checked = [];
            for (var i in checkedIds) {
                if (checkedIds[i]) {
                    checked.push(i);
                }
            }

            alert(checked);
        });



        //$('#grid').on('click', '.checkbox', function () {
        //    var checked = $(this).is(':checked');
        //    var dataItem = grid.dataItem($(this).closest('tr'));
        //    dataItem.set('IsAdmin', checked);
        //});


    });

    var checkedIds = {};

    //on click of the checkbox:
    function selectRow() {
        var checked = this.checked,
            row = $(this).closest("tr"),
            grid = $("#grid").data("kendoGrid"),
            dataItem = grid.dataItem(row);

        if (checked) {
            //-select the row
            row.addClass("k-state-selected");
        } else {
            //-remove selection
            row.removeClass("k-state-selected");
        }
    }

    //on dataBound event restore previous selected rows:
    function onDataBound(e) {
        var view = this.dataSource.view();
        for (var i = 0; i < view.length; i++) {
            if (checkedIds[view[i].id]) {
                this.tbody.find("tr[data-uid='" + view[i].uid + "']")
                    .addClass("k-state-selected")
                    .find(".checkbox")
                    .attr("checked", "checked");
            }
        }
    }

    function checkAll(ele) {
        //debugger;
        var state = $(ele).is(':checked');
        var grid = $('#grid').data().kendoGrid;
        $.each(grid.dataSource.view(), function (r) {
            if (state == true) {
                //debugger;
                //var row = $(this).closest("tr");

                //selectRow(this);
            }
        });
        grid.refresh();
    }

</script>

