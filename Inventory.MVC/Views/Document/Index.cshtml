@using Inventory.MVC.Extensions
@using Inventory.MVC.Models

<script>
    var crudHub = $.connection.crudHub;
    var hubStart = $.connection.hub.start();
</script>


@(Html.Kendo().Splitter()
      .Name("vertical")
      .Orientation(SplitterOrientation.Horizontal)
      .HtmlAttributes(new { style = "height: 800px; " })

      .Panes(verticalPanes =>
      {
          verticalPanes.Add()
              .Size("300px")
              .MinSize("100px")
              .MaxSize("600px")
              .HtmlAttributes(new { id = "top-pane" })
              .Content(
               Html.Kendo().ToolBar()
                      .Name("ToolBar")
                      .Items(items =>
                      {
                          items.Add().Type(CommandType.ButtonGroup).Buttons(buttons =>
                          {
                              buttons.Add().Text("Добави").Togglable(true).Group("text-align").SpriteCssClass("k-tool-icon k-justifyLeft");
                              buttons.Add().Text("Промени").Togglable(true).Group("text-align").SpriteCssClass("k-tool-icon k-justifyCenter");
                              buttons.Add().Text("Изтрий").Togglable(true).Group("text-align").SpriteCssClass("k-tool-icon k-justifyRight");
                          });

                      }).ToHtmlString() +

                  Html.Kendo().TreeView()
                      .Events(events => events.Change("tvSelect"))
    .Name("treeview")
              //.DataUrlField("id")
    .DataTextField("Name")
    .DataSource(dataSource => dataSource
        .Read(read => read
            .Action("GetFolders", "Document")
        )
    ).ToHtmlString()

              );

          verticalPanes.Add().Size("100%").HtmlAttributes(new { id = "right-pane" })
              .Content(

 Html.Kendo().Grid<FileViewModel>().Name("FileViewModel")
 .AddBaseOptions(DataSourceType.Ajax)

                      .DataSource(dataSource => dataSource
                                 .Ajax()




                                 .Read(read => read.Action("ReadFiles", "Document").Data("getTreeviewSelectedItem"))

                                 )
                                 .ToolBar(t => t.Template(Html.Kendo().ToolBar()
    .Name("ToolBar2")
    .Items(items =>
    {
        items.Add().Template(Html.Kendo().TextBox().Name("tbSearch").ToHtmlString());
        items.Add().Template(Html.Kendo().Button().Name("btnSearch").Content("Търси").ToHtmlString());
    }).ToHtmlString()))
              
            .ToHtmlString()


              );
      })
)

<script type="text/javascript">
    function tvSelect(e) {
        // `this` refers to the TreeView object
        var dataItem = this.dataItem(e.node);

        var grid = $("#FileViewModel").data("kendoGrid");
        grid.dataSource.read();

    }

    function getTreeviewSelectedItem() {
        debugger;
        var treeview = $("#treeview").data("kendoTreeView");
        var selected = treeview.select();
        var fullName = "";
        if (selected.length != 0) {
            fullName = treeview.dataItem(selected[0]).FullName;
        }

        return {
            folderFullPath: fullName
        }


    }
</script>